<?XML Version="1.0">
<nidocument>
<nicomment>
<nifamily familyname="NI-CAN" displayname="NI-CAN">
</nifamily>
</nicomment>
<nierror code="-1074388991">
NI-CAN:  (Hex 0xBFF62001) The timeout of a wait or notification function expired before any desired state occurred.  Solutions: Increase value of Timeout parameter; Verify your cable connections and operation of remote devices.
</nierror>
<nierror code="-1074388990">
NI-CAN:  (Hex 0xBFF62002) An internal error occurred in the NI-CAN driver.  A description is located in the file NicanErr.txt in your Windows folder.  Solutions:  Email or fax the NicanErr.txt file to National Instruments for technical support.
</nierror>
<nierror code="-1074388989">
NI-CAN:  (Hex 0xBFF62003) There is a basic syntax error in the ObjName parameter.  Solutions: Verify that the name does not contain invalid characters, and that it uses the syntax specified for the Open function.
</nierror>
<nierror code="-1074388988">
NI-CAN:  (Hex 0xBFF62004) A function parameter is invalid.  Solutions: Read the function description and verify that you provide a valid value for each parameter.
</nierror>
<nierror code="-1074388987">
NI-CAN:  (Hex 0xBFF62005) The value of one or more properties (attributes) is invalid. This error occurs for Set (one value bad) or Initialize/Config (one or more values bad).  Solutions: Consult the Programmer Reference to verify the values of each property.
</nierror>
<nierror code="-1074388986">
NI-CAN:  (Hex 0xBFF62006) The object is already open in another application.  Solutions: Ensure that only one application at a time uses an object , and that you close all objects prior to exiting your application (don't use LabVIEW toolbar's Abort button).
</nierror>
<nierror code="-1074388985">
NI-CAN:  (Hex 0xBFF62007) You attempted to set a configuration attribute while the object is running.  Solutions: Configure attributes prior to opening the object; Stop and restart communication as needed so that you can update configuration attributes.
</nierror>
<nierror code="-1074388984">
NI-CAN:  (Hex 0xBFF62008) Write queue overflow.  Solutions: Increase the length of the write queue; Wait for Write Success state prior to calling Write; To transmit recent data only, set the write queue length to zero.
</nierror>
<nierror code="-1074388982">
NI-CAN:  (Hex 0xBFF6200A) A known feature is not supported.  Solutions: Refer to the descriptions in the manual to determine which feature is unsupported.
</nierror>
<nierror code="-1074388981">
NI-CAN:  (Hex 0xBFF6200B) CAN bus problems caused all communications to stop.  This error corresponds to CAN Bus Off state.  Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="-1074388978">
NI-CAN:  (Hex 0xBFF6200E) You called Read DeviceNet Explicit Message before the response arrived. Solution: Wait for the Read Avail state prior to calling read; Make sure you call Write DeviceNet Explicit Message before calling read (every response requires a request).
</nierror>
<nierror code="-1074388977">
NI-CAN:  (Hex 0xBFF6200F) The DeviceNet duplicate MAC ID check failed for the Interface Object.  Solution: Using a Who utility, determine an unused MAC ID in your DeviceNet system, and use that MAC ID for Open DeviceNet Interface.
</nierror>
<nierror code="-1074388976">
NI-CAN:  (Hex 0xBFF62010) Error initializing DeviceNet device.  Miscellaneous device init error.  Solution: Verify that the configuration specified in Open functions matches the capabilities of your device.
</nierror>
<nierror code="-1074388975">
NI-CAN:  (Hex 0xBFF62011) DeviceNet device not found.  A connection could not be established with the MAC ID specified in the Open function.  Solutions: Use a Who utility to verify that the device exists at the expected MAC ID; Verify that cabling is correct.
</nierror>
<nierror code="-1074388974">
NI-CAN:  (Hex 0xBFF62012) DeviceNet message fragments received out of sequence.  Fragmentation breaks a large message into smaller fragments for network transmission.  Solutions: Verify that cabling is correct; Contact device manufacturer (bug in device).
</nierror>
<nierror code="-1074388972">
NI-CAN:  (Hex 0xBFF62014) Error response received from remote DeviceNet device.  Indicates that Get / Set Dnet Attribute failed in the device.  Solutions: Using DeviceError, refer to the error codes in the DeviceNet Specification or to documentation from the device vendor.
</nierror>
<nierror code="-1074388969">
NI-CAN:  (Hex 0xBFF62017) This attribute's value must be provided prior to the Open.  Solutions: Set the attribute using the Config function before the Open, and do not set the attribute at any later time.
</nierror>
<nierror code="-1074388959">
NI-CAN:  (Hex 0xBFF62021) The watchdog timeout for a CAN Object expired, indicating that data was not received at the rate expected.  Solutions: Verify your cable connections and operation of remote devices; Increase the Period of the CAN Object.
</nierror>
<nierror code="-1074388957">
NI-CAN:  (Hex 0xBFF62023) The Interface is invalid or unknown.  Solutions: Verify that the interface is assigned to a specific port within the National Instruments configuration tool. For NI-CAN, assign the interface (such as CAN0) within the Devices and Interfaces branch of MAX. For NI-DNET, assign the interface (such as DNET0) within the NI-DNET Hardware Configuration utility.
</nierror>
<nierror code="-1074388956">
NI-CAN:  (Hex 0xBFF62024) The object handle (ObjHandle) is invalid.  Solutions: Verify that the Open function succeeded;  Verify that you do not close the handle in another thread of execution (such as with ncReset).
</nierror>
<nierror code="-1074388954">
NI-CAN:  (Hex 0xBFF62026) The DeviceNet Interface Object is already open with a different Poll Mode.  Solutions: Change all Poll Mode parameters to match; Stop communication with Operate Dnet Interface before trying to add I/O connections.
</nierror>
<nierror code="-1074388952">
NI-CAN:  (Hex 0xBFF62028) Overflow in the lower level read queue of the CAN card (frames lost).  NI-CAN reads this queue at Windows interrupt-time. Solutions: Avoid tasks that generate excessive interrupts on your PC (mouse, ethernet, ...); Avoid running other applications during your test (screen savers, MAX, ...); use Series 2 Filter Mode to filter incoming traffic; For CAN Objects (Frame API), increase read queue length or call Read more frequently.
</nierror>
<nierror code="-1074388949">
NI-CAN:  (Hex 0xBFF6202B) CAN bus problems (stuff error) caused all communications to stop.  This error corresponds to CAN Bus Off state.  Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="-1074388947">
NI-CAN:  (Hex 0xBFF6202D) Exceeded resource limit for queues in shared memory between firmware/driver. The ncReadMult function is not allowed. Solutions: Decrease queue lengths in objects; Set read queue length to at least 2; Decrease number of CAN Objects.
</nierror>
<nierror code="-1074388944">
NI-CAN:  (Hex 0xBFF62030) Error initializing DeviceNet device.  Unsupported ConnectionType.  For example, if the device supports only Strobed I/O, and you configure Polled I/O, this error occurs.  Solution: Refer to the device documentation for valid connection types.
</nierror>
<nierror code="-1074388941">
NI-CAN:  (Hex 0xBFF62033) DeviceNet Interface Object not yet open.  Solution: Open the DeviceNet Interface Object before opening any other objects (I/O or Explicit Messaging).
</nierror>
<nierror code="-1074388927">
NI-CAN:  (Hex 0xBFF62041) The connection to the DeviceNet device timed out.  The device is no longer responding to messages sent by NI-DNET.  Solutions: Increase the value of ExpPacketRate in Open Dnet IO; Use a Who utility to verify that the device is operational.
</nierror>
<nierror code="-1074388925">
NI-CAN:  (Hex 0xBFF62043) The CAN Object name is invalid or unknown.  Solutions: Verify that you use the syntax specified in the NI-CAN documentation.
</nierror>
<nierror code="-1074388922">
NI-CAN:  (Hex 0xBFF62046) You tried to open a DeviceNet COS I/O connection with a Cyclic I/O connection already open for that device.  Solutions: COS and Cyclic connections are mutually exclusive, so you can only open one type for a given device.
</nierror>
<nierror code="-1074388920">
NI-CAN:  (Hex 0xBFF62048) Overflow in the CAN communication chip.  This error occurs when frames are received back-to-back for long periods.  Solutions: Set Series 2 Filter Mode to filter out frames; Dedicate entire CAN card to receive high busload (transmit with 2nd card, receive another network with 2nd card instead and 2nd port).
</nierror>
<nierror code="-1074388917">
NI-CAN:  (Hex 0xBFF6204B) CAN bus problems (bad frame format) caused all communications to stop.  This error corresponds to CAN Bus Off state.  Solutions: Verify that cabling is correct, devices are connected and operational, and that proper bus power is applied.
</nierror>
<nierror code="-1074388915">
NI-CAN:  (Hex 0xBFF6204D) Exceeded resource limit for DeviceNet I/O tables.  Solutions: Decrease the number of I/O connections used; Decrease the InputLength or OutputLength used for a given I/O Object (255 max).
</nierror>
<nierror code="-1074388912">
NI-CAN:  (Hex 0xBFF62050) Error initializing DeviceNet device.  Unsupported InputLength.  InputLength must match the produced_connection_size attribute in the device's I/O Connection Object.  Exception: For Strobed I/O as a slave, InputLength must be 1.
</nierror>
<nierror code="-1074388888">
NI-CAN:  (Hex 0xBFF62068) Intermediate receive queue overflow.  This queue holds frames as they are transferred from the CAN chip into object read queues.  Solutions: Set Net Interface mask and comparators to filter out frames; Reduce overall bus traffic.
</nierror>
<nierror code="-1074388885">
NI-CAN:  (Hex 0xBFF6206B) CAN bus problems (no ack) caused all communications to stop.  This error corresponds to CAN Bus Off state.  Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="-1074388883">
NI-CAN:  (Hex 0xBFF6206D) Exceeded limit for length of Write DeviceNet Explicit Message.    The maximum length of an explicit message request is 240 service data bytes.  Solutions: Decrease the length of the explicit message request.
</nierror>
<nierror code="-1074388880">
NI-CAN:  (Hex 0xBFF62070) Error initializing DeviceNet device.  Unsupported OutputLength.  OutputLength must match the consumed_connection_size attribute in the device's I/O Connection Object.  Exception: For Strobed I/O as a master, OutputLength must be 1.
</nierror>
<nierror code="-1074388856">
NI-CAN:  (Hex 0xBFF62088) Overflow in timed transmit list.  This list holds frames for pending timed transmissions (Write of Net Interface with timestamp).  Solutions: Increase the length of the timed transmit list; Wait for timed frames to transmit before Write.
</nierror>
<nierror code="-1074388853">
NI-CAN:  (Hex 0xBFF6208B) CAN bus problems (tx 1, rx 0) caused all communications to stop.  This error corresponds to CAN Bus Off state.  Solutions: Verify that cabling is correct, devices are connected and operational, and that proper bus power is applied.
</nierror>
<nierror code="-1074388851">
NI-CAN:  (Hex 0xBFF6208D) Exceeded limit for length of Read DeviceNet Explicit Message. The maximum length of an explicit message response is 240 service data bytes. Larger responses are discarded.  Solutions: Configure the device to return a smaller response.
</nierror>
<nierror code="-1074388848">
NI-CAN:  (Hex 0xBFF62090) Error initializing DeviceNet device. Unsupported ExpPacketRate. Solutions: Some devices place lower/upper limits on EPR; If EPR is small, increase it; If EPR is large, decrease it.
</nierror>
<nierror code="-1074388831">
NI-CAN:  (Hex 0xBFF620A1) Too many messages with high transmit rates. The combined timers cannot be accurately maintained. Solutions: Decrease the number of periodic transmissions; Decrease the transmit rate for one or more messages.
</nierror>
<nierror code="-1074388821">
NI-CAN:  (Hex 0xBFF620AB) CAN bus problems (tx 0, rx 1) caused all communications to stop.  This error corresponds to CAN Bus Off state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="-1074388819">
NI-CAN:  (Hex 0xBFF620AD) You called Write DeviceNet Explicit Message before the response arrived for a previous write.  Only one explicit message can be pending.  Solutions: Finish the write/wait/read sequence before writing another explicit message request.
</nierror>
<nierror code="-1074388816">
NI-CAN:  (Hex 0xBFF620B0) Error initializing DeviceNet device. Vendor ID of device differs from your driver attribute. Solutions: If you replaced the device, use the new vendor ID as driver attr; If you no longer want to verify, remove the Set Driver Attr call.
</nierror>
<nierror code="-1074388789">
NI-CAN:  (Hex 0xBFF620CB) CAN bus problems (bad CRC) caused all communications to stop. This error corresponds to CAN Bus Off state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="-1074388787">
NI-CAN:  (Hex 0xBFF620CD) Exceeded resource limit for RTSI signals.  Solutions: Decrease the number of RTSI signals used; Refer to your User Manual for information regarding valid RTSI signals for your CAN card.
</nierror>
<nierror code="-1074388784">
NI-CAN:  (Hex 0xBFF620D0) Error initializing DeviceNet device. Device Type of device differs from your driver attribute. Solutions: If you replaced the device, use the new device type as driver attr; If you no longer want to verify, remove the Set Driver Attr call.
</nierror>
<nierror code="-1074388757">
NI-CAN:  (Hex 0xBFF620EB) CAN bus problems (unknown Intel 82527 error) caused all communications to stop. This error corresponds to CAN Bus Off state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="-1074388752">
NI-CAN:  (Hex 0xBFF620F0) Error initializing DeviceNet device. Product Code of device differs from your driver attribute.  Solutions: If you replaced the device, use the new product code as driver attr; If you no longer want to verify, remove the Set Driver Attr call.
</nierror>
<nierror code="-1074388736">
NI-CAN:  (Hex 0xBFF62100) Exceeded limit for total number of messages. Solution: For Channel API, decrease the number of Output messages; For Frame API, decrease number of CAN Objects that receive data by using the Network Interface to receive frames.
</nierror>
<nierror code="-1074388735">
NI-CAN:  (Hex 0xBFF62101) CAN chip supports at most 12 of the following CAN Objects: Tx By Response (Std or Xtd ID), Rx Xtd ID. Solutions: Set Tx By Response attributes to false; Config all Tx Xtd before Rx Xtd; Don't use Net Intf to receive Xtd frames (CompXtd=None).
</nierror>
<nierror code="-1074388734">
NI-CAN:  (Hex 0xBFF62102) A sample rate (duration) that you submitted is too large or too small.  Solutions: Read the function description to determine whether to increase or decrease the sample rate.
</nierror>
<nierror code="-1074388733">
NI-CAN:  (Hex 0xBFF62103) The CAN card's firmware no longer responds to commands from the PC's driver, usually due to frequent CAN or timer interrupts. Solutions: Refer to ncAction for hints on handling high-traffic; Decrease the total number of objects in use.
</nierror>
<nierror code="-1074388732">
NI-CAN:  (Hex 0xBFF62104) The property ID, attribute ID, or operation code that you provided is invalid. Solutions: Read the function description and verify that you provide a valid ID.
</nierror>
<nierror code="-1074388731">
NI-CAN:  (Hex 0xBFF62105) The size or length that you provided is invalid (too small or large), and the operation could not continue. Solutions: Read the function description and verify that you provide a valid size (or length).
</nierror>
<nierror code="-1074388730">
NI-CAN:  (Hex 0xBFF62106) The length that you provided for the timed transmit list is invalid. Solutions: Decrease the length that you provide as the attribute for timed transmit length.
</nierror>
<nierror code="-1074388729">
NI-CAN:  (Hex 0xBFF62107) You tried to create 2 or more notifications in different threads of execution.  Solutions: Create only one notification for each object; Cancel notification (ncCreateNotification with DesiredState=0) prior to calling ncCloseObject.  
</nierror>
<nierror code="-1074388728">
NI-CAN:  (Hex 0xBFF62108) The NI-CAN and NI-DNET functions cannot be used simultaneously on the same CAN card (even 2-port cards).  Solution: Use 2 or more CAN cards, with NI-CAN on one card, and NI-DNET on the other.
</nierror>
<nierror code="-1074388726">
NI-CAN:  (Hex 0xBFF6210A) The language interface for NI-CAN cannot find a required DLL (such as NICAN.DLL).  Solution: Uninstall NI-CAN and re-install.
</nierror>
<nierror code="-1074388725">
NI-CAN:  (Hex 0xBFF6210B) The language interface for NI-CAN cannot find a required function in NICAN.DLL.  Solution: Uninstall NI-CAN and re-install.
</nierror>
<nierror code="-1074388724">
NI-CAN:  (Hex 0xBFF6210C) The language interface for NI-CAN cannot acquire a required resource (i.e. mutex).  Solution: Uninstall NI-CAN and re-install.
</nierror>
<nierror code="-1074388723">
NI-CAN:  (Hex 0xBFF6210D) Your application uses a feature that is not supported by your NI CAN hardware.  Solutions: Contact NI to upgrade your CAN hardware; Consult the Programmer Reference to avoid the new feature (typically related to RTSI or SJA1000).
</nierror>
<nierror code="-1074388722">
NI-CAN:  (Hex 0xBFF6210E) Your application uses a feature that is supported by older Series 1 NI CAN hardware only, but you are using Series 2 or later.  Solutions: Consult the Programmer Reference to update your application to the improved feature of your hardware.
</nierror>
<nierror code="-1074388721">
NI-CAN:  (Hex 0xBFF6210F) Set of the absolute timestamp cannot be done when periodic CAN Objects are running.  Solutions: Set the timestamp prior to starting the CAN Objects (using ncAction).
</nierror>
<nierror code="-1074388720">
NI-CAN:  (Hex 0xBFF62110) You can not use the Frame API and Channel API simultaneously on the same interface (such as CAN0).  Tools in MAX use the Channel API.  Solutions: Use a different interface with each API.
</nierror>
<nierror code="-1074388719">
NI-CAN:  (Hex 0xBFF62111) You can not call ncWaitForState more than once for the same object.  Solutions: Include all desired states in a single call to ncWaitForState, then use the returned state to invoke the proper code in your application.
</nierror>
<nierror code="-1074388718">
NI-CAN:  (Hex 0xBFF62112) You called a Read function prior to Starting the task.  Solutions: Use the Start function before Read.
</nierror>
<nierror code="-1074388717">
NI-CAN:  (Hex 0xBFF62113) You connected two or more SourceTerminal to the same DestinationTerminal.  Solutions: Make sure that you Clear your task at the end of your application; Disconnect the previous SourceTerminal before connecting the new SourceTerminal.
</nierror>
<nierror code="-1074388716">
NI-CAN:  (Hex 0xBFF62114) You connected a SourceTerminal and DestinationTerminal combination that is not supported.  Solutions: Refer to ConnectTerminals in the Programmer Reference for a listing of valid terminal combinations.
</nierror>
<nierror code="-1074388715">
NI-CAN:  (Hex 0xBFF62115) The start trigger that you specified in ConnectTerminals occurred before you called NI-CAN Start.  Therefore, CAN and/or DAQ tasks start in the wrong order.  Solution: Start tasks that receive the start trigger, then Start the task that generates it.
</nierror>
<nierror code="-1074388714">
NI-CAN:  (Hex 0xBFF62116) String input parameter is too large.  Solutions: Consult the Programmer Reference to determine the maximum length of input string(s).
</nierror>
<nierror code="-1074388713">
NI-CAN:  (Hex 0xBFF62117) You called ReadMult for an object configured with Read Queue Length zero.  Solutions: Configure Read Queue Length to a value greater than zero.
</nierror>
<nierror code="-1074388712">
NI-CAN:  (Hex 0xBFF62118) The NI-CAN driver failed to initialize the hardware.  This may be due to a hardware resource conflict, such as the card's IRQ or physical memory.  Solutions: Select the CAN card in MAX, run the Self-test, and view the resulting Status message for assistance.
</nierror>
<nierror code="-1074388711">
NI-CAN:  (Hex 0xBFF62119) You are calling Read too slowly for one task, but not others.  The task that you Read slowly lost some of the oldest data from the network.  Solutions: Remove long waits from your application to ensure that you Read CAN tasks uniformly.
</nierror>
<nierror code="-1074388710">
NI-CAN:  (Hex 0xBFF6211A) NI-CAN copies received CAN frames from the card to a large kernel-level queue.  There is one queue for each Channel API message. If your application does not Read fast enough to empty this queue over time, the newest frames are lost.  Solutions: Call Read more frequently (such as by reducing user-interface code); Reduce the number of messages in your tasks; Use single sample Input (sample rate 0).
</nierror>
<nierror code="-1074388708">
NI-CAN:  (Hex 0xBFF6211C) You initialized the same message with different I/O modes.  Solutions: For each message use only one I/O mode and sample rate (0 or not) combination at a time; Use a different interface (port) for each mode.
</nierror>
<nierror code="-1074388707">
NI-CAN:  (Hex 0xBFF6211D) Network Interface configuration is missing. The Net Interface attributes are deleted when the final CAN Object is closed (fix to bad v1.6 behavior). Solutions: Open/Close Net Interface even if unused; Config Net Interface with each CAN Object.
</nierror>
<nierror code="-1074388706">
NI-CAN:  (Hex 0xBFF6211E) You set a transceiver mode that is not supported by your CAN hardware. For example, Single-Wire modes are not supported for High-Speed or Low-Speed / Fault-Tolerant transceivers. Solutions: Consult the manual to determine the valid transceiver modes for your hardware.
</nierror>
<nierror code="-1074388705">
NI-CAN:  (Hex 0xBFF6211F) Wrong attribute / property for the transceiver mode given the current transceiver type. Solution: When transceiver type is External, use only the Transceiver External Outputs attribute. For all other transceiver types, use only the Transceiver Mode attribute.
</nierror>
<nierror code="-1074388704">
NI-CAN:  (Hex 0xBFF62120) Your application uses a feature that is only supported by XS models of NI CAN hardware. For example, you tried to set the Transceiver Type. Solutions: Consult the manual to avoid the XS feature; Contact NI to upgrade your CAN hardware to XS.
</nierror>
<nierror code="-1074388703">
NI-CAN:  (Hex 0xBFF62121) You cannot use the CAN transceiver (such as start communication) with the transceiver disconnected. Use the Disconnected mode only during physical switching of an external transceiver. Solutions: Set the transceiver type to External (or HS, LS, SW) before starting.
</nierror>
<nierror code="-1074388702">
NI-CAN:  (Hex 0xBFF62122) You attempted to transmit (write) a frame when Listen Only is true. The CAN controller does not allow transmission while Listen Only is enabled. Solutions: Set Listen Only to false (default); Remove all code that transmits either data frames or remote frames.
</nierror>
<nierror code="-1074388701">
NI-CAN:  (Hex 0xBFF62123) Attribute can be changed using ncSetAttribute only, not ncConfig. Solutions: ncConfig the Net Interface with StartOnOpen false, ncOpen the Net Interface, ncSetAttribute to change the attribute, then use ncAction to start communication.
</nierror>
<nierror code="-1074388700">
NI-CAN:  (Hex 0xBFF62124) You used a baud rate that is not valid for your transceiver type. For example, Low-Speed transceivers are limited to 125k, and Single-Wire transceivers are limited to 100k. Solutions: Use MAX to specify a valid baud rate in the interface's Properties dialog; For the Frame API, specify a valid baud rate in the Config function for the Net Interface.
</nierror>
<nierror code="-1074388699">
NI-CAN:  (Hex 0xBFF62125) NI-CAN copies received CAN frames from the card to a large kernel-level queue.  There is one queue for each interface (port). If your application does not Read fast enough to empty this queue over time, the newest frames are lost.  Solutions: Call Read more frequently (such as by reducing user-interface code); Avoid running other applications during your test (screen savers, MAX, ...); use Series 2 Filter Mode to filter incoming traffic.
</nierror>
<nierror code="-1074388480">
NI-CAN:  (Hex 0xBFF62200) Exceeded limit for total number of tasks. Solution: Reduce the number of tasks in your application; If you use multiple tasks for the same message, combine them in order to use one task per message
</nierror>
<nierror code="-1074388479">
NI-CAN:  (Hex 0xBFF62201) Channel not found in MAX or the CAN database file.  Solutions: Check for proper spelling using MAX; For Get/Set Property, ensure that the channel name exists in the task.
</nierror>
<nierror code="-1074388478">
NI-CAN:  (Hex 0xBFF62202) Channel exists in multiple messages, but you did not qualify the channel name with the message name.  Solutions: Add the message name to the channel name using message.channel syntax.
</nierror>
<nierror code="-1074388477">
NI-CAN:  (Hex 0xBFF62203) Two or more messages use the same arbitration ID.  Solution: Within MAX or your application, ensure that the arbitration ID is used for only one message.
</nierror>
<nierror code="-1074388476">
NI-CAN:  (Hex 0xBFF62204) String output parameter is too small to return the entire string.  Solutions: Consult the Programmer Reference to determine the maximum length of output string(s).
</nierror>
<nierror code="-1074388475">
NI-CAN:  (Hex 0xBFF62205) Failed to open CAN database file.  Solutions: Ensure that the file path for the file uses proper Windows syntax; Ensure that the file exists on your system.
</nierror>
<nierror code="-1074388473">
NI-CAN:  (Hex 0xBFF62207) You passed NULL for a required pointer.  Solutions: Consult the Programmer Reference to ensure that you pass valid pointers to the function.
</nierror>
<nierror code="-1074388472">
NI-CAN:  (Hex 0xBFF62208) Can not use Timestamped Input with a task whose channels span multiple messages.  The resulting timestamps are ambiguous for such tasks.  Solutions: Initialize a separate task for each message.
</nierror>
<nierror code="-1074388471">
NI-CAN:  (Hex 0xBFF62209) Your call to Read or Write does not match the initialized input/output mode.  For example, you called Read for a task initialized as output.  Solutions: Consult the Programmer Reference to ensure that the initialized mode matches the read/write.
</nierror>
<nierror code="-1074388470">
NI-CAN:  (Hex 0xBFF6220A) You set the Timeout property greater than zero, and Read of timestamped samples detected a timeout before the number of desired samples arrived.  Solutions: Set Timeout to zero to poll for available samples; Increase Timeout property.
</nierror>
<nierror code="-1074388469">
NI-CAN:  (Hex 0xBFF6220B) You did not pass an interface to Initialize, and a unique interface is not specified in MAX.  Solutions: Use MAX to assign the same default interface for all messages in the task; Pass the desired interface to Initialize.
</nierror>
<nierror code="-1074388468">
NI-CAN:  (Hex 0xBFF6220C) The interface is transmitting frames, but no device in the network is receiving (acknowledging).  Solutions: When running port-to-port examples, start the receiving example first; Verify that your CAN cabling and termination is correct.
</nierror>
<nierror code="-1074388466">
NI-CAN:  (Hex 0xBFF6220E) Start trigger did not occur for the task.  You have routed the start trigger to be received from RTSI or some other terminal, but a pulse did not occur.  Solutions: Start the CAN task first, then start the DAQ or other task immediately after.
</nierror>
<nierror code="-1074388465">
NI-CAN:  (Hex 0xBFF6220F) Message not found in MAX or the CAN database file.  Solutions: Check for proper spelling using MAX.
</nierror>
<nierror code="-1074388464">
NI-CAN:  (Hex 0xBFF62210) You created a message for the Channel API with a data length greater than 8 bytes. The CAN protocol supports only 8 bytes messages. Larger messages require a higher-level protocol on top of CAN, such as SAE-J1939. Solutions: Configure the number of bytes per message to 8 bytes or less.
</nierror>
<nierror code="-1074388463">
NI-CAN:  (Hex 0xBFF62211) You called Read or Write with number of samples 0. You must read or write a buffer of at least one sample. Solutions: Use number of samples greater than or equal to 1.
</nierror>
<nierror code="1073094662">
NI-CAN:  (Hex 0x3FF62006) The object is already open, but you are allowed to use a duplicate handle.  Solutions: Ensure that only one application at a time uses an object , and that you close all objects prior to exiting your application (don't use LabVIEW toolbar's Abort button).
</nierror>
<nierror code="1073094665">
NI-CAN:  (Hex 0x3FF62009) The data returned from this Read matches the data returned from the previous call to Read.  Solutions: If you merely want the most recent data, ignore this warning; For new data, wait for Read Avail state before calling Read.
</nierror>
<nierror code="1073094667">
NI-CAN:  (Hex 0x3FF6200B) CAN bus problems detected, but communication is proceeding. This warning corresponds to CAN Error Passive state. Solutions: Verify that cabling is correct, devices are connected and operational, and that proper bus power is applied.
</nierror>
<nierror code="1073094668">
NI-CAN:  (Hex 0x3FF6200C) CAN transceiver warning, typically indicated by the NERR signal.  A fault exists on the bus, but communication continues.  Solutions: Verify that cabling is correct.
</nierror>
<nierror code="1073094677">
NI-CAN:  (Hex 0x3FF62015) User's notification function never returned. Object was closed regardless. Solutions: Remove long loops or other time-consuming code from the function used with Create Notification.
</nierror>
<nierror code="1073094699">
NI-CAN:  (Hex 0x3FF6202B) CAN bus problems detected (stuff error), but communication is proceeding. This warning corresponds to CAN Error Passive state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="1073094701">
NI-CAN:  (Hex 0x3FF6202D) Exceeded resource limit for queues in shared memory between firmware/driver. Read or write queue performance is reduced. Solutions: Decrease queue lengths in objects; Decrease the total number of objects.
</nierror>
<nierror code="1073094731">
NI-CAN:  (Hex 0x3FF6204B) CAN bus problems detected (bad frame format), but communication is proceeding. This warning corresponds to CAN Error Passive state. Solutions: Verify that cabling is correct, devices are connected and operational, and that proper bus power is applied.
</nierror>
<nierror code="1073094763">
NI-CAN:  (Hex 0x3FF6206B) CAN bus problems detected (no ack), but communication is proceeding. This warning corresponds to CAN Error Passive state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="1073094795">
NI-CAN:  (Hex 0x3FF6208B) CAN bus problems detected (tx 1, rx 0), but communication is proceeding. This warning corresponds to CAN Error Passive state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="1073094827">
NI-CAN:  (Hex 0x3FF620AB) CAN bus problems detected (tx 0, rx 1), but communication is proceeding. This warning corresponds to CAN Error Passive state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="1073094859">
NI-CAN:  (Hex 0x3FF620CB) CAN bus problems detected (bad CRC), but communication is proceeding. This warning corresponds to CAN Error Passive state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="1073094891">
NI-CAN:  (Hex 0x3FF620EB) CAN bus problems detected (unknown Intel 82527 error), but communication is proceeding. This warning corresponds to CAN Error Passive state. Solutions: Verify that cabling is correct, devices are connected and operational, and proper bus power is applied.
</nierror>
<nierror code="1073094917">
NI-CAN:  (Hex 0x3FF62105) The size or length that you provided is invalid (too small or large), but the operation continued successfully. Solutions: Read the function description and verify that you provide a valid size (or length).
</nierror>
<nierror code="1073094921">
NI-CAN:  (Hex 0x3FF62109) The combined sample rates of all messages result in timing that is too fast.  Solutions: Decrease number of messages; Decrease one or more sample rates; For Frame API, use Net Interface for all receiving.
</nierror>
<nierror code="1073094950">
NI-CAN:  (Hex 0x3FF62126) You configured CAN transmit when a RTSI input pulses, and the RTSI rate occurs faster than CAN frames can be transmitted at the specified baud rate. Solutions: Configure the source of RTSI pulse (i.e. DAQ counter) for a slower rate.
</nierror>
<nierror code="1073095174">
NI-CAN:  (Hex 0x3FF62206) Your task is initialized with sample rate 0, but you Read or Write more than a single sample. Since unsampled frame transfer uses only a single sample, the additional samples are redundant. Solutions: Read or Write only one sample (single-sample modes).
</nierror>
<nierror code="1073095181">
NI-CAN:  (Hex 0x3FF6220D) Task is already running, and you called Start. The additional Start is ignored. Solutions: If you use InitStart for a task, an additional Start is not required.
</nierror>
</nidocument>